{"ast":null,"code":"var _jsxFileName = \"/Users/youssoufyogue/Desktop/NewS/hr-client-management/src/components/EmployeeList/EmployeeList.jsx\";\nimport React from 'react';\nimport Tables from '../Tables/Tables';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EmployeeList = ({\n  admins,\n  employees\n}) => {\n  if (!Array.isArray(admins) || !Array.isArray(employees)) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No data available or still loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 12\n    }, this);\n  }\n  const employeeData = employees.filter(employee => !admins.some(admin => admin.nom === employee.nom && admin.postNom === employee.postNom && admin.preNom === employee.preNom && admin.dateDeNaissance === employee.dateDeNaissance));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Admin List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), admins.map(admin => /*#__PURE__*/_jsxDEV(Tables, {\n      companyId: admin.companyId // Pass companyId for Admins\n      ,\n      nom: admin.nom,\n      postNom: admin.postNom,\n      preNom: admin.preNom,\n      date: admin.dateDeNaissance,\n      lieu: admin.villeDeNaissance,\n      function: admin.role,\n      adresse: admin.address,\n      commune: admin.commune,\n      quartier: admin.quartier\n    }, admin._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Employee List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), employeeData.map(employee => /*#__PURE__*/_jsxDEV(Tables, {\n      nom: employee.nom,\n      postNom: employee.postNom,\n      preNom: employee.preNom,\n      date: employee.dateDeNaissance,\n      lieu: employee.villeDeNaissance,\n      function: employee.role,\n      adresse: employee.address,\n      commune: employee.commune,\n      quartier: employee.quartier\n    }, employee._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n_c = EmployeeList;\nexport default EmployeeList;\nvar _c;\n$RefreshReg$(_c, \"EmployeeList\");","map":{"version":3,"names":["React","Tables","jsxDEV","_jsxDEV","EmployeeList","admins","employees","Array","isArray","children","fileName","_jsxFileName","lineNumber","columnNumber","employeeData","filter","employee","some","admin","nom","postNom","preNom","dateDeNaissance","map","companyId","date","lieu","villeDeNaissance","function","role","adresse","address","commune","quartier","_id","_c","$RefreshReg$"],"sources":["/Users/youssoufyogue/Desktop/NewS/hr-client-management/src/components/EmployeeList/EmployeeList.jsx"],"sourcesContent":["import React from 'react';\nimport Tables from '../Tables/Tables';\n\nconst EmployeeList = ({ admins, employees }) => {\n  if (!Array.isArray(admins) || !Array.isArray(employees)) {\n    return <div>No data available or still loading...</div>;\n  }\n\n  const employeeData = employees.filter(\n    (employee) =>\n      !admins.some(\n        (admin) =>\n          admin.nom === employee.nom &&\n          admin.postNom === employee.postNom &&\n          admin.preNom === employee.preNom &&\n          admin.dateDeNaissance === employee.dateDeNaissance\n      )\n  );\n\n  return (\n    <div>\n      <h2>Admin List</h2>\n      {admins.map((admin) => (\n        <Tables\n          key={admin._id}\n          companyId={admin.companyId} // Pass companyId for Admins\n          nom={admin.nom}\n          postNom={admin.postNom}\n          preNom={admin.preNom}\n          date={admin.dateDeNaissance}\n          lieu={admin.villeDeNaissance}\n          function={admin.role}\n          adresse={admin.address}\n          commune={admin.commune}\n          quartier={admin.quartier}\n        />\n      ))}\n\n      <h2>Employee List</h2>\n      {employeeData.map((employee) => (\n        <Tables\n          key={employee._id}\n          nom={employee.nom}\n          postNom={employee.postNom}\n          preNom={employee.preNom}\n          date={employee.dateDeNaissance}\n          lieu={employee.villeDeNaissance}\n          function={employee.role}\n          adresse={employee.address}\n          commune={employee.commune}\n          quartier={employee.quartier}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default EmployeeList;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,MAAMC,YAAY,GAAGA,CAAC;EAAEC,MAAM;EAAEC;AAAU,CAAC,KAAK;EAC9C,IAAI,CAACC,KAAK,CAACC,OAAO,CAACH,MAAM,CAAC,IAAI,CAACE,KAAK,CAACC,OAAO,CAACF,SAAS,CAAC,EAAE;IACvD,oBAAOH,OAAA;MAAAM,QAAA,EAAK;IAAqC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EACzD;EAEA,MAAMC,YAAY,GAAGR,SAAS,CAACS,MAAM,CAClCC,QAAQ,IACP,CAACX,MAAM,CAACY,IAAI,CACTC,KAAK,IACJA,KAAK,CAACC,GAAG,KAAKH,QAAQ,CAACG,GAAG,IAC1BD,KAAK,CAACE,OAAO,KAAKJ,QAAQ,CAACI,OAAO,IAClCF,KAAK,CAACG,MAAM,KAAKL,QAAQ,CAACK,MAAM,IAChCH,KAAK,CAACI,eAAe,KAAKN,QAAQ,CAACM,eACvC,CACJ,CAAC;EAED,oBACEnB,OAAA;IAAAM,QAAA,gBACEN,OAAA;MAAAM,QAAA,EAAI;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAClBR,MAAM,CAACkB,GAAG,CAAEL,KAAK,iBAChBf,OAAA,CAACF,MAAM;MAELuB,SAAS,EAAEN,KAAK,CAACM,SAAU,CAAC;MAAA;MAC5BL,GAAG,EAAED,KAAK,CAACC,GAAI;MACfC,OAAO,EAAEF,KAAK,CAACE,OAAQ;MACvBC,MAAM,EAAEH,KAAK,CAACG,MAAO;MACrBI,IAAI,EAAEP,KAAK,CAACI,eAAgB;MAC5BI,IAAI,EAAER,KAAK,CAACS,gBAAiB;MAC7BC,QAAQ,EAAEV,KAAK,CAACW,IAAK;MACrBC,OAAO,EAAEZ,KAAK,CAACa,OAAQ;MACvBC,OAAO,EAAEd,KAAK,CAACc,OAAQ;MACvBC,QAAQ,EAAEf,KAAK,CAACe;IAAS,GAVpBf,KAAK,CAACgB,GAAG;MAAAxB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAWf,CACF,CAAC,eAEFV,OAAA;MAAAM,QAAA,EAAI;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACrBC,YAAY,CAACS,GAAG,CAAEP,QAAQ,iBACzBb,OAAA,CAACF,MAAM;MAELkB,GAAG,EAAEH,QAAQ,CAACG,GAAI;MAClBC,OAAO,EAAEJ,QAAQ,CAACI,OAAQ;MAC1BC,MAAM,EAAEL,QAAQ,CAACK,MAAO;MACxBI,IAAI,EAAET,QAAQ,CAACM,eAAgB;MAC/BI,IAAI,EAAEV,QAAQ,CAACW,gBAAiB;MAChCC,QAAQ,EAAEZ,QAAQ,CAACa,IAAK;MACxBC,OAAO,EAAEd,QAAQ,CAACe,OAAQ;MAC1BC,OAAO,EAAEhB,QAAQ,CAACgB,OAAQ;MAC1BC,QAAQ,EAAEjB,QAAQ,CAACiB;IAAS,GATvBjB,QAAQ,CAACkB,GAAG;MAAAxB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAUlB,CACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACsB,EAAA,GApDI/B,YAAY;AAsDlB,eAAeA,YAAY;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}