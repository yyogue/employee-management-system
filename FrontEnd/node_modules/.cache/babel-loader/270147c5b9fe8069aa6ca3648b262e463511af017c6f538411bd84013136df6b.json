{"ast":null,"code":"var _jsxFileName = \"/Users/youssoufyogue/Desktop/NewS/hr-client-management/src/components/EmployeeList/EmployeeList.jsx\";\nimport React from 'react';\nimport Tables from '../Tables/Tables';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EmployeeList = ({\n  employees\n}) => {\n  // Ensure 'employees' is an array before attempting to map over it\n  if (!Array.isArray(employees)) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No employees available or data is still loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Employee List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: employees.map(employee => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [`${employee.nom} ${employee.postNom} ${employee.preNom}`, /*#__PURE__*/_jsxDEV(Tables, {\n          nom: `${employee.nom}`,\n          postNom: `${employee.postNom}`,\n          preNom: `${employee.preNom}`,\n          dateEtLieu: `${villeDeNaissance} `,\n          department: employee.departement,\n          role: employee.role,\n          phone: employee.numeroDeTelephone\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 13\n        }, this)]\n      }, employee._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n};\n_c = EmployeeList;\nexport default EmployeeList;\nvar _c;\n$RefreshReg$(_c, \"EmployeeList\");","map":{"version":3,"names":["React","Tables","jsxDEV","_jsxDEV","EmployeeList","employees","Array","isArray","children","fileName","_jsxFileName","lineNumber","columnNumber","map","employee","nom","postNom","preNom","dateEtLieu","villeDeNaissance","department","departement","role","phone","numeroDeTelephone","_id","_c","$RefreshReg$"],"sources":["/Users/youssoufyogue/Desktop/NewS/hr-client-management/src/components/EmployeeList/EmployeeList.jsx"],"sourcesContent":["import React from 'react';\nimport Tables from '../Tables/Tables';\n\nconst EmployeeList = ({ employees }) => {\n  // Ensure 'employees' is an array before attempting to map over it\n  if (!Array.isArray(employees)) {\n    return <div>No employees available or data is still loading...</div>;\n  }\n\n  return (\n    <div>\n      <h2>Employee List</h2>\n      <ul>\n        {employees.map((employee) => (\n          <li key={employee._id}>\n            {/* Display employee details */}\n            {`${employee.nom} ${employee.postNom} ${employee.preNom}`}\n            {/* Pass individual employee data as props to Tables component */}\n            <Tables\n              nom={`${employee.nom}`}\n              postNom={`${employee.postNom}`}\n              preNom={`${employee.preNom}`}\n              dateEtLieu={`${villeDeNaissance} `}\n              department={employee.departement}\n              role={employee.role}\n              phone={employee.numeroDeTelephone}\n            />\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default EmployeeList;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,MAAMC,YAAY,GAAGA,CAAC;EAAEC;AAAU,CAAC,KAAK;EACtC;EACA,IAAI,CAACC,KAAK,CAACC,OAAO,CAACF,SAAS,CAAC,EAAE;IAC7B,oBAAOF,OAAA;MAAAK,QAAA,EAAK;IAAkD;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EACtE;EAEA,oBACET,OAAA;IAAAK,QAAA,gBACEL,OAAA;MAAAK,QAAA,EAAI;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACtBT,OAAA;MAAAK,QAAA,EACGH,SAAS,CAACQ,GAAG,CAAEC,QAAQ,iBACtBX,OAAA;QAAAK,QAAA,GAEG,GAAGM,QAAQ,CAACC,GAAG,IAAID,QAAQ,CAACE,OAAO,IAAIF,QAAQ,CAACG,MAAM,EAAE,eAEzDd,OAAA,CAACF,MAAM;UACLc,GAAG,EAAE,GAAGD,QAAQ,CAACC,GAAG,EAAG;UACvBC,OAAO,EAAE,GAAGF,QAAQ,CAACE,OAAO,EAAG;UAC/BC,MAAM,EAAE,GAAGH,QAAQ,CAACG,MAAM,EAAG;UAC7BC,UAAU,EAAE,GAAGC,gBAAgB,GAAI;UACnCC,UAAU,EAAEN,QAAQ,CAACO,WAAY;UACjCC,IAAI,EAAER,QAAQ,CAACQ,IAAK;UACpBC,KAAK,EAAET,QAAQ,CAACU;QAAkB;UAAAf,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACnC,CAAC;MAAA,GAZKE,QAAQ,CAACW,GAAG;QAAAhB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAajB,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAACc,EAAA,GA7BItB,YAAY;AA+BlB,eAAeA,YAAY;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}