{"ast":null,"code":"var _jsxFileName = \"/Users/youssoufyogue/Desktop/NewS/hr-client-management/src/components/EmployeeList/EmployeeList.jsx\";\nimport React from 'react';\nimport Tables from '../Tables/Tables';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EmployeeList = ({\n  employees\n}) => {\n  // Ensure 'employees' is an array before attempting to map over it\n  if (!Array.isArray(employees)) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No employees available or data is still loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Employee List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this), employees.map((employee, index) => /*#__PURE__*/_jsxDEV(Tables, {\n      // Use a unique key for each Tables component\n      nom: employee.nom,\n      postNom: employee.postNom,\n      preNom: employee.preNom,\n      date: employee.dateDeNaissance,\n      lieu: employee.villeDeNaissance,\n      function: employee.role,\n      adresse: employee.address,\n      commune: employee.commune,\n      quartier: employee.quartier\n    }, employee._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n};\n_c = EmployeeList;\nexport default EmployeeList;\nvar _c;\n$RefreshReg$(_c, \"EmployeeList\");","map":{"version":3,"names":["React","Tables","jsxDEV","_jsxDEV","EmployeeList","employees","Array","isArray","children","fileName","_jsxFileName","lineNumber","columnNumber","map","employee","index","nom","postNom","preNom","date","dateDeNaissance","lieu","villeDeNaissance","function","role","adresse","address","commune","quartier","_id","_c","$RefreshReg$"],"sources":["/Users/youssoufyogue/Desktop/NewS/hr-client-management/src/components/EmployeeList/EmployeeList.jsx"],"sourcesContent":["import React from 'react';\nimport Tables from '../Tables/Tables';\n\nconst EmployeeList = ({ employees }) => {\n  // Ensure 'employees' is an array before attempting to map over it\n  if (!Array.isArray(employees)) {\n    return <div>No employees available or data is still loading...</div>;\n  }\n\n  return (\n    <div>\n      <h2>Employee List</h2>\n      {employees.map((employee, index) => (\n        <Tables\n          key={employee._id} // Use a unique key for each Tables component\n          nom={employee.nom}\n          postNom={employee.postNom}\n          preNom={employee.preNom}\n          date={employee.dateDeNaissance}\n          lieu={employee.villeDeNaissance}\n          function={employee.role}\n          adresse={employee.address}\n          commune={employee.commune}\n          quartier={employee.quartier}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default EmployeeList;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,MAAMC,YAAY,GAAGA,CAAC;EAAEC;AAAU,CAAC,KAAK;EACtC;EACA,IAAI,CAACC,KAAK,CAACC,OAAO,CAACF,SAAS,CAAC,EAAE;IAC7B,oBAAOF,OAAA;MAAAK,QAAA,EAAK;IAAkD;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EACtE;EAEA,oBACET,OAAA;IAAAK,QAAA,gBACEL,OAAA;MAAAK,QAAA,EAAI;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACrBP,SAAS,CAACQ,GAAG,CAAC,CAACC,QAAQ,EAAEC,KAAK,kBAC7BZ,OAAA,CAACF,MAAM;MACc;MACnBe,GAAG,EAAEF,QAAQ,CAACE,GAAI;MAClBC,OAAO,EAAEH,QAAQ,CAACG,OAAQ;MAC1BC,MAAM,EAAEJ,QAAQ,CAACI,MAAO;MACxBC,IAAI,EAAEL,QAAQ,CAACM,eAAgB;MAC/BC,IAAI,EAAEP,QAAQ,CAACQ,gBAAiB;MAChCC,QAAQ,EAAET,QAAQ,CAACU,IAAK;MACxBC,OAAO,EAAEX,QAAQ,CAACY,OAAQ;MAC1BC,OAAO,EAAEb,QAAQ,CAACa,OAAQ;MAC1BC,QAAQ,EAAEd,QAAQ,CAACc;IAAS,GATvBd,QAAQ,CAACe,GAAG;MAAApB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAUlB,CACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACkB,EAAA,GAzBI1B,YAAY;AA2BlB,eAAeA,YAAY;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}